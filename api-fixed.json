{
  "openapi": "3.0.0",
  "info": {
    "title": "Leap",
    "description": "The Official Leap API",
    "version": "1.0",
    "contact": {
    }
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.tryleap.ai"
    }
  ],
  "tags": [
    {
      "name": "Generate Images"
    },
    {
      "name": "Train Image Models"
    },
    {
      "name": "Generate Music"
    }
  ],
  "paths": {
    "/api/v1/images/models/{modelId}/inferences": {
      "post": {
        "tags": [
          "Generate Images"
        ],
        "summary": "Generate an Image",
        "operationId": "InferencesController_create",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "Generate an image by providing a text description. Generations usually take bettween 4-20 seconds per image. Total generation time depends on the number of `steps` and `noOfImages` you select. This endpoint will submit the generation job and return immediately. To retrieve the results you must provide a webhook URL or query/poll the [Get a Single Image Job](https://reference.tryleap.ai/reference/inferencescontroller_findone-1) endpoint.",
        "parameters": [
          {
            "description": "The ID of the model to use to generate images. This can be a custom model, or a public model. To view the list of public models, visit: https://docs.tryleap.ai/public-models",
            "name": "modelId",
            "required": true,
            "in": "path",
            "example": "26a1a203-3a46-42cb-8cfa-f4de075907d8",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInferenceDto"
              },
              "examples": {
                "Create a new inference": {
                  "value": {
                    "prompt": "A photo of an astronaut riding a horse",
                    "steps": 50,
                    "height": 1024,
                    "width": 1024,
                    "numberOfImages": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully submitted image generation job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InferenceEntity"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Generate Images"
        ],
        "summary": "List All Image Jobs",
        "operationId": "InferencesController_findAll",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "Fetch a list of inference jobs for a specific model.",
        "parameters": [
          {
            "description": "The ID of the model to generate images. This can be a custom model or a public model. Visit: https://docs.tryleap.ai/public-models to view the list of public models.",
            "name": "modelId",
            "required": true,
            "in": "path",
            "example": "26a1a203-3a46-42cb-8cfa-f4de075907d8",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set to true, only finished inferences will be returned. If set to false or not set, all inference jobs will be returned.",
            "name": "onlyFinished",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The page to request.",
            "name": "page",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of items to return per page.",
            "name": "pageSize",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of image generation jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InferencesControllerFindAllResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/models/{modelId}/inferences/{inferenceId}": {
      "get": {
        "tags": [
          "Generate Images"
        ],
        "summary": "Get Single Image Job",
        "operationId": "InferencesController_findOne",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "Retrieve a single image generation job, including the urls for the images generated.",
        "parameters": [
          {
            "description": "The ID of the model to use to generate images. This can be a custom model, or a public model. To view the list of public models, visit: https://docs.tryleap.ai/public-models",
            "name": "modelId",
            "required": true,
            "in": "path",
            "example": "26a1a203-3a46-42cb-8cfa-f4de075907d8",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the image generation job to retrieve. This is the same ID that is returned when you submit a new image generation job.",
            "name": "inferenceId",
            "required": true,
            "in": "path",
            "example": "a047df00-8bdd-4d57-a9bd-6eebef36ecaa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved image generation job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InferenceEntity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Generate Images"
        ],
        "summary": "Delete Image Job",
        "operationId": "InferencesController_remove",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "Delete the image job and all related images.",
        "parameters": [
          {
            "description": "The ID of the model to use to generate images. This can be a custom model, or a public model. To view the list of public models, visit: https://docs.tryleap.ai/public-models",
            "name": "modelId",
            "required": true,
            "in": "path",
            "example": "26a1a203-3a46-42cb-8cfa-f4de075907d8",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the image generation job to retrieve. This is the same ID that is returned when you submit a new image generation job.",
            "name": "inferenceId",
            "required": true,
            "in": "path",
            "example": "a047df00-8bdd-4d57-a9bd-6eebef36ecaa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted image generation job."
          }
        }
      }
    },
    "/api/v2/images/models/new": {
      "post": {
        "tags": [
          "Train Image Models"
        ],
        "summary": "Train Model",
        "operationId": "TrainImageModels_trainModel",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "Upload a few image samples, and train a new model. Training usually takes 20-40 minutes. To be notified when the model completes training you must provide a `webhookUrl` in the training request, or check for completion by calling [Get a Single Model](https://reference.tryleap.ai/reference/get-model-1). After training completes, you can use the model to generate images with [Generate Images](https://reference.tryleap.ai/reference/inferencescontroller_create-1).",
        "parameters": [
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateAndTrainModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully submitted training job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelV2Entity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/images/models": {
      "get": {
        "tags": [
          "Train Image Models"
        ],
        "summary": "List All Models",
        "operationId": "TrainImageModels_listAllModels",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "This endpoint will return a list of all models for the workspace.",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved models.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModelsV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/images/models/{modelId}": {
      "get": {
        "tags": [
          "Train Image Models"
        ],
        "summary": "Get a Single Model",
        "operationId": "TrainImageModels_getModel",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "This endpoint will return a single model.",
        "parameters": [
          {
            "description": "The ID of the model to retrieve.",
            "name": "modelId",
            "required": true,
            "in": "path",
            "example": "5f9b9c0e-7c1f-4b5c-9c0e-7c1f4b5c9c0e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the model.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelV2Entity"
                }
              }
            }
          },
          "404": {
            "description": "Model does not exist"
          }
        }
      },
      "delete": {
        "tags": [
          "Train Image Models"
        ],
        "summary": "Delete a Model",
        "operationId": "TrainImageModels_deleteModel",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "This endpoint will delete a model. This is not reversible.",
        "parameters": [
          {
            "description": "The ID of the model to delete.",
            "name": "modelId",
            "required": true,
            "in": "path",
            "example": "5f9b9c0e-7c1f-4b5c-9c0e-7c1f4b5c9c0e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelV2Entity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/music": {
      "post": {
        "tags": [
          "Generate Music"
        ],
        "summary": "Generate Music",
        "operationId": "MusicController_createAudio",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "Generate music by providing a text description. Generations usually take bettween 1-3 minutes. Total generation time depends on the `duration` you select. This endpoint will submit the generation job and return immediately. To retrieve the results you must provide a webhook URL or query/poll the [Get a Music Generation Job](https://reference.tryleap.ai/reference/musiccontroller_findoneaudio) endpoint.",
        "parameters": [
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMusicgenInferenceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully submitted music generation job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicgenInferenceEntity"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Generate Music"
        ],
        "summary": "List Music Generation Jobs",
        "operationId": "MusicController_findAllAudio",
        "security": [
          {
            "bearer": [
            ]
          }
        ],
        "description": "List all music generation jobs for a workspace.",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved music generation jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicControllerFindAllAudioResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/music/{inferenceId}": {
      "get": {
        "tags": [
          "Generate Music"
        ],
        "summary": "Get a Music Generation Job",
        "operationId": "MusicController_findOneAudio",
        "description": "Get a specific music generation job.",
        "parameters": [
          {
            "description": "The ID of the music generation job to retrieve. This is the same ID returned when you submit a job.",
            "name": "inferenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved music generation job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicgenInferenceEntity"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateInferenceDto": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "A text description of the image you what you want to generate.",
            "type": "string",
            "example": "A photo of an astronaut riding a horse",
            "default": "A photo of an astronaut riding a horse"
          },
          "negativePrompt": {
            "description": "A text description of what the image should try to avoid generating.",
            "type": "string",
            "example": "asymmetric, bad hands, bad hair",
            "default": "asymmetric, watermarks"
          },
          "steps": {
            "description": "How many steps the AI will take to generate the image. Lower is faster but less detailed, higher is slower more detailed.",
            "type": "number",
            "example": 50,
            "default": 50
          },
          "width": {
            "description": "The width of the image to use for the inference. Must be a multiple of 8. For best results use 1024x1024 for SDXL, and 512x512 for other models.",
            "type": "number",
            "example": 1024,
            "default": 1024
          },
          "height": {
            "description": "The height of the image to use for the inference. Must be a multiple of 8. For best results use 1024x1024 for SDXL, and 512x512 for other models.",
            "type": "number",
            "example": 1024,
            "default": 1024
          },
          "numberOfImages": {
            "description": "The number of images to generate, up to 4.",
            "type": "number",
            "example": 1,
            "default": 1
          },
          "promptStrength": {
            "description": "The higher the prompt strength, the closer the generated image will be to the prompt. Must be between 0 and 30.",
            "type": "number",
            "example": 7,
            "default": 7
          },
          "seed": {
            "description": "A random number to use as a seed when generating the image. This is helpful if you want to generate the same image multiple times. If you want to generate different images, keep this empty or provide a random number.",
            "type": "number",
            "example": 4523184,
            "default": 4523184
          },
          "webhookUrl": {
            "description": "An optional webhook URL that will be called with a POST request when the image generation request completes.",
            "type": "string"
          }
        },
        "required": [
          "prompt"
        ]
      },
      "InferenceImageEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "uri"
        ]
      },
      "InferenceEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "negativePrompt": {
            "type": "string"
          },
          "seed": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "promptStrength": {
            "type": "number"
          },
          "numberOfImages": {
            "type": "number"
          },
          "state": {
            "type": "string",
            "enum": [
              "failed",
              "finished",
              "processing",
              "queued"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "failed",
              "finished",
              "processing",
              "queued"
            ]
          },
          "steps": {
            "type": "number"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InferenceImageEntity"
            }
          },
          "modelId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "upscalingOption": {
            "type": "string",
            "enum": [
              "x1",
              "x2",
              "x4"
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "prompt",
          "negativePrompt",
          "seed",
          "width",
          "height",
          "promptStrength",
          "numberOfImages",
          "state",
          "status",
          "steps",
          "images",
          "modelId",
          "upscalingOption"
        ]
      },
      "CreateAndTrainModelDto": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Provide a name so you can more easily identify the model.",
            "type": "string",
            "example": "Alex Avatar Model"
          },
          "subjectKeyword": {
            "description": "This is the keyword you will use during image generation to trigger your custom subject. For example \"a photo of @me\".",
            "type": "string",
            "example": "@me"
          },
          "subjectType": {
            "description": "The subject type - a short description, usually a noun, that describes what the underlying model is learning. For example: person, man, woman, cat, dog, icon, style. Defaults to \"person\".",
            "type": "string",
            "default": "person"
          },
          "webhookUrl": {
            "description": "An optional webhook URL that will be called with a POST request when the model completes training or fails.",
            "type": "string",
            "example": "https://example.com/api/webhook"
          },
          "imageSampleUrls": {
            "description": "An array of strings containing the URLs of the images to upload. Either this or imageSampleFiles is required, but not both.",
            "type": "array",
            "format": "string",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "imageSampleFiles": {
            "description": "An array of files containing the images to upload. Either this or imageSampleUrls is required, but not both.",
            "type": "array",
            "format": "binary",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "ModelV2Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "subjectKeyword": {
            "type": "string"
          },
          "subjectType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "imageSamples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "subjectKeyword",
          "subjectType",
          "status",
          "imageSamples"
        ]
      },
      "ListModelsV2Response": {
        "type": "object",
        "properties": {
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelV2Entity"
            }
          }
        },
        "required": [
          "models"
        ]
      },
      "CreateMusicgenInferenceDto": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "A description of the music you want to generate.",
            "type": "string",
            "example": "An electronic music soundtrack with a trumpet solo",
            "default": "An electronic music soundtrack with a trumpet solo"
          },
          "mode": {
            "description": "Select a mode, each option generates different results. Melody is best for melody, music is best for full songs",
            "type": "string",
            "default": "melody",
            "enum": [
              "melody",
              "music"
            ]
          },
          "duration": {
            "description": "Duration of the generated audio in seconds. Max 30 seconds.",
            "type": "number",
            "default": 28
          }
        },
        "required": [
          "prompt",
          "mode",
          "duration"
        ]
      },
      "MusicgenInferenceEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "failed",
              "finished",
              "processing",
              "queued"
            ]
          },
          "media_uri": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "prompt",
          "state"
        ]
      },
      "InferencesControllerFindAllResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/InferenceEntity"
        }
      },
      "MusicControllerFindAllAudioResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MusicgenInferenceEntity"
        }
      }
    }
  }
}