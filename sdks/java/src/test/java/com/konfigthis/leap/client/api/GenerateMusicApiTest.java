/*
 * Leap
 * The Official Leap API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.leap.client.api;

import com.konfigthis.leap.client.ApiException;
import com.konfigthis.leap.client.ApiClient;
import com.konfigthis.leap.client.ApiException;
import com.konfigthis.leap.client.Configuration;
import com.konfigthis.leap.client.model.CreateMusicgenInferenceDto;
import com.konfigthis.leap.client.model.MusicgenInferenceEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GenerateMusicApi
 */
@Disabled
public class GenerateMusicApiTest {

    private static GenerateMusicApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new GenerateMusicApi(apiClient);
    }

    /**
     * Generate Music
     *
     * Generate music by providing a text description. Generations usually take bettween 1-3 minutes. Total generation time depends on the &#x60;duration&#x60; you select. This endpoint will submit the generation job and return immediately. To retrieve the results you must provide a webhook URL or query/poll the [Get a Music Generation Job](https://reference.tryleap.ai/reference/musiccontroller_findoneaudio) endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAudioTest() throws ApiException {
        String prompt = null;
        String mode = null;
        Double duration = null;
        MusicgenInferenceEntity response = api.createAudio(prompt, mode, duration)
                .execute();
        // TODO: test validations
    }

    /**
     * List Music Generation Jobs
     *
     * List all music generation jobs for a workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllAudioTest() throws ApiException {
        List<MusicgenInferenceEntity> response = api.findAllAudio()
                .execute();
        // TODO: test validations
    }

    /**
     * Get a Music Generation Job
     *
     * Get a specific music generation job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findOneAudioTest() throws ApiException {
        String inferenceId = null;
        MusicgenInferenceEntity response = api.findOneAudio(inferenceId)
                .execute();
        // TODO: test validations
    }

}
